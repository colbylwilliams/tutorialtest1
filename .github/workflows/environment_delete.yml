name: Delete Environment

permissions:
  id-token: write

on:
  delete:
  pull_request:
    types: [closed]

concurrency: ${{ github.event.number || github.ref_name }}

jobs:
  setup:
    name: Setup
    if: github.event_name == 'pull_request' || github.event.ref_type == 'branch'
    runs-on: ubuntu-latest
    outputs:
      name: ${{ steps.setup.outputs.name }}
      type: ${{ steps.setup.outputs.type }}
    steps:
      - name: ADE Setup
        id: setup
        uses: colbylwilliams/deployment-environments-setup@main

  delete:
    name: Delete
    if: github.event_name == 'pull_request' || github.event.ref_type == 'branch'
    runs-on: ubuntu-latest

    needs: setup
    environment: ${{ needs.setup.outputs.type }}

    steps:
      - name: Az CLI login
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ vars.AZURE_TENANT_ID }}
          subscription-id: ${{ vars.AZURE_SUBSCRIPTION_ID }}

      - name: Get Environment
        id: get
        uses: colbylwilliams/deployment-environments@main
        with:
          tenant: ${{ vars.AZURE_TENANT_ID }}
          subscription: ${{ vars.AZURE_SUBSCRIPTION_ID }}
          devcenter: ${{ vars.AZURE_DEVCENTER }}
          project: ${{ vars.AZURE_PROJECT }}
          environment-name: ${{ needs.setup.outputs.name }}

      - name: Delete Environment
        if: ${{ steps.get.outputs.exists == 'true' }}
        run: |
          az devcenter dev environment delete --name ${{ needs.setup.outputs.name }} \
              --dev-center ${{ vars.AZURE_DEVCENTER }} --project ${{ vars.AZURE_PROJECT }} --yes

  # config:
  #   if: github.event_name == 'pull_request' || github.event.ref_type == 'branch'
  #   name: Get Configuration
  #   uses: ./.github/workflows/environment_config.yml

  # delete_env:
  #   if: github.event_name == 'pull_request' || github.event.ref_type == 'branch'
  #   name: Delete ${{ needs.config.outputs.type }} Environment
  #   runs-on: ubuntu-latest

  #   needs: config
  #   environment: ${{ needs.config.outputs.type }}

  #   env:
  #     ENVIRONMENT_NAME: ${{ needs.config.outputs.name }}
  #     ENVIRONMENT_TYPE: ${{ needs.config.outputs.type }}

  #   steps:
  #     - name: Install DevCenter CLI Extension
  #       run: az extension add --name devcenter --upgrade

  #     - name: Az CLI login
  #       uses: azure/login@v1
  #       with:
  #         client-id: ${{ secrets.AZURE_CLIENT_ID }}
  #         tenant-id: ${{ vars.AZURE_TENANT_ID }}
  #         subscription-id: ${{ vars.AZURE_SUBSCRIPTION_ID }}

  #     - name: Delete Environment
  #       run: |
  #         az devcenter dev environment delete --name ${{ env.ENVIRONMENT_NAME }} \
  #             --dev-center ${{ vars.AZURE_DEVCENTER }} --project ${{ vars.AZURE_PROJECT }} --yes
